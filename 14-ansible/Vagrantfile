# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"
priv_key = "id_ed25519"

MACHINES = {
  :ansible => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:share => '1',
	:ssh_agent => true,
        :script => "pip3 install ansible"
  },
  :nginx => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.102',
	:share => '0',
	:ssh_agent => false,
	:script => 'echo Nothing to see here...'
  }
}

Vagrant.configure("2") do |config|

    config.vm.box_version = "1804.02"
    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|
                if boxconfig[:share] == '1'
         	        box.vm.synced_folder "ansible", "/home/vagrant/ansible", type: "virtualbox"
                else
	        	box.vm.synced_folder ".", "/vagrant", disabled: true
        	end

            box.vm.box = boxconfig[:box_name]
            box.vm.hostname = boxname.to_s
	    
            box.vm.network "private_network", ip: boxconfig[:ip_addr]
            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "256"]
            end
          
	    # Setting SSH keys from host.
	    box.ssh.forward_agent = boxconfig[:ssh_agent]
	    # Replace for your own keys!
	    box.vm.provision "file", source: "~/.ssh/"+priv_key+".pub", destination: "/tmp/authorized_keys"

            box.ssh.insert_key = false
            if box.vm.hostname == 'ansible'
	        box.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "~/.ssh/"+priv_key]
                box.vm.provision "file", source: "~/.ssh/"+priv_key, destination: "/home/vagrant/ansible/.ssh/ansible_key"
                box.vm.provision "shell", inline: "chmod 600 ~vagrant/ansible/.ssh/ansible_key"
            end

        box.vm.provision "shell", inline: <<-SHELL
	    cat /tmp/authorized_keys >> ~vagrant/.ssh/authorized_keys
	    rm /tmp/authorized_keys
            mkdir -p ~root/.ssh
            cp ~vagrant/.ssh/auth* ~root/.ssh
            yum install -y python3
            SHELL
        box.vm.provision "shell", inline: boxconfig[:script]
        end
    end
end
